<?php
//////////////////////////////////////////////////////////////////////////////
// DAO (Data Access Object) インターフェース                                //
// Copyright (C) 2005-2006 Kazuhiro.Kobayashi tnksys@nitto-kohki.co.jp      //
// Changed history                                                          //
// 2005/07/20 Created   daoInterface.php                                    //
//   Ver1.00                                                                //
// 2006/07/13 新規インターフェースメソッド getCheckAuthority(ID, Division)  //
//   Ver1.10    ID=権限ID(社員番号やIPアドレス等), Division=権限区分 を追加 //
// 2006/10/04 ini_set('error_reporting', E_ALL) をコメント 呼出元で設定する //
//   Ver1.11                                                                //
// 2006/10/05 getCheckAuthority($id, $division) →                          //
//   Ver1.12           getCheckAuthority($division, $id='') $idはオプション //
//////////////////////////////////////////////////////////////////////////////
// ini_set('error_reporting', E_ALL);          // E_ALL='2047' debug 用

if (class_exists('daoInterface')) {
    return;
}
define('DAO_VERSION', '1.12');

/****************************************************************************
*         base interface 基底インターフェースの定義                         *
****************************************************************************/
interface daoInterface
{
    //////////////////////////////////////////////////////////////////////////
    /*  DB コネクション return=コネクションリソース(TRUE)  error=FALSE      */
    //////////////////////////////////////////////////////////////////////////
    public function connectDB();
    
    //////////////////////////////////////////////////////////////////////////
    /* ユニークなデータを取出す return=TRUE/FALSE                           */
    //////////////////////////////////////////////////////////////////////////
    public function getUniResult($sql, &$result);
    
    //////////////////////////////////////////////////////////////////////////
    /* 表形式なデータを取出す$result[$r][$f](数値indexのみ) return=rows     */
    //////////////////////////////////////////////////////////////////////////
    public function getResult2($sql, &$result);
    
    //////////////////////////////////////////////////////////////////////////
    /*      表形式なデータ(数値index+連想index)を取出す return=rows         */
    //////////////////////////////////////////////////////////////////////////
    /********** 互換性のために残す **********/
    public function getResult($sql, &$result);
    
    //////////////////////////////////////////////////////////////////////////
    /*     トランザクション用 更新 SQL実行 return=更新数 <0(error)          */
    //////////////////////////////////////////////////////////////////////////
    public function query_affected_trans($connect, $sql);
    
    //////////////////////////////////////////////////////////////////////////
    /*          １ショット更新用 SQL実行 return=更新数 <0(error)            */
    //////////////////////////////////////////////////////////////////////////
    public function query_affected($sql);
    
    //////////////////////////////////////////////////////////////////////////
    /* トランザクション用 Unique 照会専用で戻り値は一つ                     */
    /*      return=1(検索値あり) 0(検索値なし) <0(error)                    */
    //////////////////////////////////////////////////////////////////////////
    public function getUniResTrs($connect, $query, &$result);
    
    //////////////////////////////////////////////////////////////////////////
    /* トランザクション用 表形式データを取出す$result[$r][$f](数値index)    */
    /*      return= rows>0(検索値あり) 0(検索値なし) <0(error)              */
    //////////////////////////////////////////////////////////////////////////
    public function getResultTrs($connect, $query, &$result);
    
    //////////////////////////////////////////////////////////////////////////
    /* トランザクション用 表形式データを取出す$result[$r][$f](数値index)    */
    /* + field名の配列 return= rows>0(検索値あり) 0(検索値なし) <0(error)   */
    /* 0レコードでもフィールドだけ取出せる 0 record対応                     */
    //////////////////////////////////////////////////////////////////////////
    public function getResWithFieldTrs($connect, $query, &$field, &$result);
    
    //////////////////////////////////////////////////////////////////////////
    /* システム管理用のＤＢ処理専用 エラーメッセージは画面のみ １ショット   */
    /* + field名の配列 return= rows>0(検索値あり) 0(検索値なし) <0(error)   */
    /* 0レコードでもフィールドだけ取出せる 0 record対応                     */
    //////////////////////////////////////////////////////////////////////////
    public function getResultWithField($query, &$field, &$result);
    
    //////////////////////////////////////////////////////////////////////////
    /*  一般用ＤＢ処理 php_error出力 １ショット版 数値index＋連想index      */
    /* + field名の配列 return= rows>0(検索値あり) 0(検索値なし) <0(error)   */
    /* 0レコードでもフィールドだけ取出せる 0 record対応                     */
    //////////////////////////////////////////////////////////////////////////
    public function getResultWithField2($query, &$field, &$result);
    
    //////////////////////////////////////////////////////////////////////////
    /* 一般用ＤＢ処理 php_error出力 １ショット版 $resultは数値indexのみ     */
    /* + field名の配列 return= rows>0(検索値あり) 0(検索値なし) <0(error)   */
    /* 0レコードでもフィールドだけ取出せる 0 record対応                     */
    //////////////////////////////////////////////////////////////////////////
    public function getResultWithField3($query, &$field, &$result);
    
    //////////////////////////////////////////////////////////////////////////
    /* 共通権限有り無し取得メソッド IDに対して権限のありなし                */
    /* id=string型, divisionは権限区分1～順番にインクリメントinteger型      */
    /* 戻り値は bool型 true=権限あり, false=権限無し                        */
    //////////////////////////////////////////////////////////////////////////
    public function getCheckAuthority($division, $id='');
    
}


?>